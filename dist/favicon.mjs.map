{"mappings":"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","sources":["src/favicon.js","src/bundle.js","src/ico.js","src/resize.js","src/png.js"],"sourcesContent":["import Bundle from \"./bundle\";\nimport Ico from \"./ico.js\";\nimport Png from \"./png\";\nimport Resize from \"./resize\";\n\nclass FaviconJS {\n  constructor(canvas) {\n    this.canvas = canvas;\n  }\n\n  bundle() {\n    return new Bundle(this.canvas).generate();\n  }\n\n  ico(sizes) {\n    return new Ico(this.canvas).generate(sizes);\n  }\n\n  png(size) {\n    return new Png(this.canvas).generate(size);\n  }\n\n  resize(size) {\n    return new Resize(this.canvas).generate(size, size);\n  }\n}\n\nexport default FaviconJS;\n","import Ico from \"./ico.js\";\nimport Png from \"./png.js\";\n\nclass Bundle {\n  constructor(canvas) {\n    this.canvas = canvas;\n  }\n\n  generate() {\n    const ico = new Ico(this.canvas);\n    const png = new Png(this.canvas);\n\n    return {\n      ico: ico.generate([16, 32, 48]),\n      png16: png.generate(16),\n      png32: png.generate(32),\n      png150: png.generate(150),\n      png180: png.generate(180),\n      png192: png.generate(192),\n      png512: png.generate(512),\n    };\n  }\n}\n\nexport default Bundle;\n","import Resize from \"./resize.js\";\n\nclass Ico {\n  constructor(canvas) {\n    this.canvas = canvas;\n  }\n\n  generate(sizes = [16, 32, 48]) {\n    const canvasMaster = new Resize(this.canvas).generate(128, 128);\n    const iconDirectoryHeader = this.createIconDirectoryHeader(sizes.length);\n    let iconDirectoryEntries = \"\";\n    let bitmapData = \"\";\n\n    for (let i = 0; i < sizes.length; i++) {\n      const size = sizes[i];\n      const canvas = new Resize(canvasMaster).generate(size, size);\n      const context = canvas.getContext(\"2d\");\n      const width = canvas.width;\n      const height = canvas.height;\n      const imageData = context.getImageData(0, 0, width, height);\n      const bitmapInfoHeader = this.createBitmapInfoHeader(width, height);\n      const bitmapImageData = this.createBitmapImageData(canvas);\n      const bitmapSize = bitmapInfoHeader.length + bitmapImageData.length;\n      const bitmapOffset = this.calculateBitmapOffset(sizes, i);\n      iconDirectoryEntries += this.createIconDirectoryEntry(\n        width,\n        height,\n        bitmapSize,\n        bitmapOffset\n      );\n      bitmapData += bitmapInfoHeader + bitmapImageData;\n    }\n\n    const binary = iconDirectoryHeader + iconDirectoryEntries + bitmapData;\n    const base64 = \"data:image/x-icon;base64,\" + btoa(binary);\n    return base64;\n  }\n\n  /**\n   * Calculates the location to the bitmap entry.\n   */\n  calculateBitmapOffset(sizes, entry) {\n    let offset = 6; // icon header size\n    offset += 16 * sizes.length; // icon entry header size\n\n    // size of previous bitmaps\n    for (let i = 0; i < entry; i++) {\n      const size = sizes[i];\n      offset += 40; // bitmap header size\n      offset += 4 * size * size; // bitmap data size\n      offset += (2 * size * size) / 8; // bitmap mask size\n    }\n    return offset;\n  }\n\n  createBitmapImageData(canvas) {\n    const ctx = canvas.getContext(\"2d\");\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const bitmapPixelData = new Uint32Array(imageData.data.buffer);\n    const bitmapBuffer = bitmapPixelData.reverse().buffer;\n    const bitmapMask = new Uint8Array((canvas.width * canvas.height * 2) / 8);\n    bitmapMask.fill(0);\n    let binary = this.arrayBufferToBinary(this.canvasToBitmap(canvas));\n    binary += this.Uint8ArrayToBinary(bitmapMask);\n    return binary;\n  }\n\n  canvasToBitmap(canvas) {\n    const ctx = canvas.getContext(\"2d\");\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const rgbaData8 = imageData.data;\n    const bgraData8 = new Uint8ClampedArray(imageData.data.length);\n    for (let i = 0; i < rgbaData8.length; i += 4) {\n      const r = rgbaData8[i];\n      const g = rgbaData8[i + 1];\n      const b = rgbaData8[i + 2];\n      const a = rgbaData8[i + 3];\n      bgraData8[i] = b;\n      bgraData8[i + 1] = g;\n      bgraData8[i + 2] = r;\n      bgraData8[i + 3] = a;\n    }\n\n    const bgraData32 = new Uint32Array(bgraData8.buffer);\n    const bgraData32Rotated = new Uint32Array(bgraData32.length);\n    for (let i = 0; i < bgraData32.length; i++) {\n      const xPos = i % canvas.width;\n      const yPos = Math.floor(i / canvas.width);\n      const xPosRotated = xPos;\n      const yPosRotated = canvas.height - 1 - yPos;\n      const indexRotated = yPosRotated * canvas.width + xPosRotated;\n      const pixel = bgraData32[i];\n      bgraData32Rotated[indexRotated] = pixel;\n    }\n    return bgraData32Rotated.buffer;\n  }\n\n  createIconDirectoryHeader(numImages) {\n    const buffer = new ArrayBuffer(6);\n    const view = new DataView(buffer);\n    view.setUint16(0, 0, true); // Reserved. Must always be 0.\n    view.setUint16(2, 1, true); // Specifies type. 1 = ICO.\n    view.setUint16(4, numImages, true); // Number of images.\n    return this.arrayBufferToBinary(buffer);\n  }\n\n  createIconDirectoryEntry(width, height, size, offset) {\n    const buffer = new ArrayBuffer(16);\n    const view = new DataView(buffer);\n    view.setUint8(0, width); // Pixel width (0..256). 0 = 256 pixels.\n    view.setUint8(1, height); // Pixel height (0..256). 0 = 256 pixels.\n    view.setUint8(2, 0); // Number of colors in pallet. 0 = no pallet.\n    view.setUint8(3, 0); // Reserved. Should be 0.\n    view.setUint16(4, 1, true); // Color planes. 0 or 1.\n    view.setUint16(6, 32, true); // Specifies bits per pixel.\n    view.setUint32(8, size, true); // Image size (bytes).\n    view.setUint32(12, offset, true); // Offset to BMP of PNG.\n    return this.arrayBufferToBinary(buffer);\n  }\n\n  createBitmapInfoHeader(width, height) {\n    const buffer = new ArrayBuffer(40);\n    const view = new DataView(buffer);\n    view.setUint32(0, 40, true); // Header size (40 bytes).\n    view.setInt32(4, width, true); // BMP width.\n    view.setInt32(8, 2 * height, true); // BMP height.\n    view.setUint16(12, 1, true); // Number of color planes. Must be 1.\n    view.setUint16(14, 32, true); // Bits per pixel\n    view.setUint32(16, 0, true); // Compression method. 0 = none.\n    view.setUint32(20, 0, true); // Image size (bytes). 0 = no compression.\n    view.setUint32(24, 0, true); // Horizontal resolution.\n    view.setUint32(28, 0, true); // Vertical resolution.\n    view.setUint32(32, 0, true); // Number of colors. 0 = default.\n    view.setUint32(36, 0, true); // Number of important colors. 0 =  all\n    return this.arrayBufferToBinary(buffer);\n  }\n\n  arrayBufferToBinary(buffer) {\n    let binary = \"\";\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return binary;\n  }\n\n  Uint8ArrayToBinary(Uint8Array) {\n    let binary = \"\";\n    const bytes = Uint8Array;\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return binary;\n  }\n}\n\nexport default Ico;\n","class Resize {\n  constructor(canvas) {\n    this.canvas = canvas;\n  }\n\n  /**\n   * Resize the canvas by halving the width and height. This produces better\n   * sampling and the image quality is generally better.\n   */\n  generate(width, height) {\n    while (this.canvas.width / 2 >= width) {\n      this._resize(this.canvas.width / 2, this.canvas.height / 2);\n    }\n\n    if (this.canvas.width > width) {\n      this._resize(width, height);\n    }\n\n    return this.canvas;\n  }\n\n  /**\n   * Simple resize of a canvas element.\n   */\n  _resize(width, height) {\n    let canvas = document.createElement(\"canvas\");\n    let resizedContext = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    resizedContext.drawImage(this.canvas, 0, 0, width, height);\n    this.canvas = canvas;\n  }\n}\n\nexport default Resize;\n","import Resize from \"./resize\";\n\nexport default class Png {\n  constructor(canvas) {\n    this.canvas = canvas;\n  }\n\n  generate(size) {\n    return new Resize(this.canvas).generate(size, size).toDataURL();\n  }\n}\n"],"names":[],"version":3,"file":"favicon.mjs.map","sourceRoot":"../"}