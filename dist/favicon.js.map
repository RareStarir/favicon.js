{"mappings":"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","sources":["src/favicon.js","src/bundle.js","src/ico.js","src/resize.js","src/png.js","<<jsx-config-pragma.js>>"],"sourcesContent":["import Bundle from \"./bundle\";\nimport Ico from \"./ico.js\";\nimport Png from \"./png\";\nimport Resize from \"./resize\";\n\nclass FaviconJS {\n  constructor(canvas) {\n    this.canvas = canvas;\n  }\n\n  bundle() {\n    return new Bundle(this.canvas).generate();\n  }\n\n  ico(sizes) {\n    return new Ico(this.canvas).generate(sizes);\n  }\n\n  png(size) {\n    return new Png(this.canvas).generate(size);\n  }\n\n  resize(size) {\n    return new Resize(this.canvas).generate(size, size);\n  }\n}\n\nexport default FaviconJS;\n","import Ico from \"./ico.js\";\nimport Png from \"./png.js\";\n\nclass Bundle {\n  constructor(canvas) {\n    this.canvas = canvas;\n  }\n\n  generate() {\n    const ico = new Ico(this.canvas);\n    const png = new Png(this.canvas);\n\n    return {\n      ico: ico.generate([16, 32, 48]),\n      png16: png.generate(16),\n      png32: png.generate(32),\n      png150: png.generate(150),\n      png180: png.generate(180),\n      png192: png.generate(192),\n      png512: png.generate(512),\n    };\n  }\n}\n\nexport default Bundle;\n","import Resize from \"./resize.js\";\n\nclass Ico {\n  constructor(canvas) {\n    this.canvas = canvas;\n  }\n\n  generate(sizes = [16, 32, 48]) {\n    const canvasMaster = new Resize(this.canvas).generate(128, 128);\n    const iconDirectoryHeader = this.createIconDirectoryHeader(sizes.length);\n    let iconDirectoryEntries = \"\";\n    let bitmapData = \"\";\n\n    for (let i = 0; i < sizes.length; i++) {\n      const size = sizes[i];\n      const canvas = new Resize(canvasMaster).generate(size, size);\n      const context = canvas.getContext(\"2d\");\n      const width = canvas.width;\n      const height = canvas.height;\n      const imageData = context.getImageData(0, 0, width, height);\n      const bitmapInfoHeader = this.createBitmapInfoHeader(width, height);\n      const bitmapImageData = this.createBitmapImageData(canvas);\n      const bitmapSize = bitmapInfoHeader.length + bitmapImageData.length;\n      const bitmapOffset = this.calculateBitmapOffset(sizes, i);\n      iconDirectoryEntries += this.createIconDirectoryEntry(\n        width,\n        height,\n        bitmapSize,\n        bitmapOffset\n      );\n      bitmapData += bitmapInfoHeader + bitmapImageData;\n    }\n\n    const binary = iconDirectoryHeader + iconDirectoryEntries + bitmapData;\n    const base64 = \"data:image/x-icon;base64,\" + btoa(binary);\n    return base64;\n  }\n\n  /**\n   * Calculates the location to the bitmap entry.\n   */\n  calculateBitmapOffset(sizes, entry) {\n    let offset = 6; // icon header size\n    offset += 16 * sizes.length; // icon entry header size\n\n    // size of previous bitmaps\n    for (let i = 0; i < entry; i++) {\n      const size = sizes[i];\n      offset += 40; // bitmap header size\n      offset += 4 * size * size; // bitmap data size\n      offset += (2 * size * size) / 8; // bitmap mask size\n    }\n    return offset;\n  }\n\n  createBitmapImageData(canvas) {\n    const ctx = canvas.getContext(\"2d\");\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const bitmapPixelData = new Uint32Array(imageData.data.buffer);\n    const bitmapBuffer = bitmapPixelData.reverse().buffer;\n    const bitmapMask = new Uint8Array((canvas.width * canvas.height * 2) / 8);\n    bitmapMask.fill(0);\n    let binary = this.arrayBufferToBinary(this.canvasToBitmap(canvas));\n    binary += this.Uint8ArrayToBinary(bitmapMask);\n    return binary;\n  }\n\n  canvasToBitmap(canvas) {\n    const ctx = canvas.getContext(\"2d\");\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const rgbaData8 = imageData.data;\n    const bgraData8 = new Uint8ClampedArray(imageData.data.length);\n    for (let i = 0; i < rgbaData8.length; i += 4) {\n      const r = rgbaData8[i];\n      const g = rgbaData8[i + 1];\n      const b = rgbaData8[i + 2];\n      const a = rgbaData8[i + 3];\n      bgraData8[i] = b;\n      bgraData8[i + 1] = g;\n      bgraData8[i + 2] = r;\n      bgraData8[i + 3] = a;\n    }\n\n    const bgraData32 = new Uint32Array(bgraData8.buffer);\n    const bgraData32Rotated = new Uint32Array(bgraData32.length);\n    for (let i = 0; i < bgraData32.length; i++) {\n      const xPos = i % canvas.width;\n      const yPos = Math.floor(i / canvas.width);\n      const xPosRotated = xPos;\n      const yPosRotated = canvas.height - 1 - yPos;\n      const indexRotated = yPosRotated * canvas.width + xPosRotated;\n      const pixel = bgraData32[i];\n      bgraData32Rotated[indexRotated] = pixel;\n    }\n    return bgraData32Rotated.buffer;\n  }\n\n  createIconDirectoryHeader(numImages) {\n    const buffer = new ArrayBuffer(6);\n    const view = new DataView(buffer);\n    view.setUint16(0, 0, true); // Reserved. Must always be 0.\n    view.setUint16(2, 1, true); // Specifies type. 1 = ICO.\n    view.setUint16(4, numImages, true); // Number of images.\n    return this.arrayBufferToBinary(buffer);\n  }\n\n  createIconDirectoryEntry(width, height, size, offset) {\n    const buffer = new ArrayBuffer(16);\n    const view = new DataView(buffer);\n    view.setUint8(0, width); // Pixel width (0..256). 0 = 256 pixels.\n    view.setUint8(1, height); // Pixel height (0..256). 0 = 256 pixels.\n    view.setUint8(2, 0); // Number of colors in pallet. 0 = no pallet.\n    view.setUint8(3, 0); // Reserved. Should be 0.\n    view.setUint16(4, 1, true); // Color planes. 0 or 1.\n    view.setUint16(6, 32, true); // Specifies bits per pixel.\n    view.setUint32(8, size, true); // Image size (bytes).\n    view.setUint32(12, offset, true); // Offset to BMP of PNG.\n    return this.arrayBufferToBinary(buffer);\n  }\n\n  createBitmapInfoHeader(width, height) {\n    const buffer = new ArrayBuffer(40);\n    const view = new DataView(buffer);\n    view.setUint32(0, 40, true); // Header size (40 bytes).\n    view.setInt32(4, width, true); // BMP width.\n    view.setInt32(8, 2 * height, true); // BMP height.\n    view.setUint16(12, 1, true); // Number of color planes. Must be 1.\n    view.setUint16(14, 32, true); // Bits per pixel\n    view.setUint32(16, 0, true); // Compression method. 0 = none.\n    view.setUint32(20, 0, true); // Image size (bytes). 0 = no compression.\n    view.setUint32(24, 0, true); // Horizontal resolution.\n    view.setUint32(28, 0, true); // Vertical resolution.\n    view.setUint32(32, 0, true); // Number of colors. 0 = default.\n    view.setUint32(36, 0, true); // Number of important colors. 0 =  all\n    return this.arrayBufferToBinary(buffer);\n  }\n\n  arrayBufferToBinary(buffer) {\n    let binary = \"\";\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return binary;\n  }\n\n  Uint8ArrayToBinary(Uint8Array) {\n    let binary = \"\";\n    const bytes = Uint8Array;\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return binary;\n  }\n}\n\nexport default Ico;\n","class Resize {\n  constructor(canvas) {\n    this.canvas = canvas;\n  }\n\n  /**\n   * Resize the canvas by halving the width and height. This produces better\n   * sampling and the image quality is generally better.\n   */\n  generate(width, height) {\n    while (this.canvas.width / 2 >= width) {\n      this._resize(this.canvas.width / 2, this.canvas.height / 2);\n    }\n\n    if (this.canvas.width > width) {\n      this._resize(width, height);\n    }\n\n    return this.canvas;\n  }\n\n  /**\n   * Simple resize of a canvas element.\n   */\n  _resize(width, height) {\n    let canvas = document.createElement(\"canvas\");\n    let resizedContext = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    resizedContext.drawImage(this.canvas, 0, 0, width, height);\n    this.canvas = canvas;\n  }\n}\n\nexport default Resize;\n","import Resize from \"./resize\";\n\nexport default class Png {\n  constructor(canvas) {\n    this.canvas = canvas;\n  }\n\n  generate(size) {\n    return new Resize(this.canvas).generate(size, size).toDataURL();\n  }\n}\n",null],"names":[],"version":3,"file":"favicon.js.map","sourceRoot":"../"}